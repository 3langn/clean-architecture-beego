// Code generated by mockery v1.0.0
package mocks

import (
	context "context"

	"clean-architecture-beego/models"

	mock "github.com/stretchr/testify/mock"
)

// Usecase is an autogenerated mock type for the Usecase type
type Usecase struct {
	mock.Mock
}

func (_m *Usecase) GetList(ctx context.Context, page,limit,offset int) (*models.SampleModulePaginationDto, string, error) {
	ret := _m.Called(ctx, page,limit,offset)

	var r0 *models.SampleModulePaginationDto
	if rf, ok := ret.Get(0).(func(context.Context, int,int,int) *models.SampleModulePaginationDto); ok {
		r0 = rf(ctx,page,limit,offset)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.SampleModulePaginationDto)
		}
	}

	var r1 string
	if rf, ok := ret.Get(1).(func(context.Context, int,int,int) string); ok {
		r1 = rf(ctx,page,limit,offset)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(string)
		}
	}

	var r2 error
	if rf, ok := ret.Get(2).(func(context.Context, int,int,int) error); ok {
		r2 = rf(ctx, page,limit,offset)
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1,r2
}
