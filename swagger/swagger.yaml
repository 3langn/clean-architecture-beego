basePath: /
definitions:
  models.Paginator:
    properties:
      back_page:
        type: integer
      current_page:
        type: integer
      limit_per_page:
        type: integer
      next_page:
        type: integer
      total_pages:
        type: integer
      total_records:
        type: integer
    type: object
  models.Response:
    properties:
      data: {}
      errors: {}
      message:
        type: string
      status_code:
        type: integer
      status_desc:
        type: string
    type: object
  models.SampleModuleDto:
    properties:
      id:
        type: integer
      test:
        type: string
    type: object
  models.SampleModulePaginationDto:
    properties:
      data:
        items:
          $ref: '#/definitions/models.SampleModuleDto'
        type: array
      paginator:
        $ref: '#/definitions/models.Paginator'
    type: object
  models.SwaggerErrorBadParamInput:
    properties:
      data:
        type: object
      errors:
        example: <Error-Message-For-System>
        type: string
      message:
        example: <Error-Message-For-Client-User>
        type: string
      status_code:
        example: 400
        type: integer
      status_desc:
        example: Bad Request
        type: string
    type: object
  models.SwaggerErrorConflict:
    properties:
      data:
        type: object
      errors:
        example: <Error-Message-For-System>
        type: string
      message:
        example: <Error-Message-For-Client-User>
        type: string
      status_code:
        example: 409
        type: integer
      status_desc:
        example: Conflict
        type: string
    type: object
  models.SwaggerErrorInvalidMethod:
    properties:
      data:
        type: object
      errors:
        example: "null"
        type: string
      message:
        example: Invalid Method
        type: string
      status_code:
        example: 400
        type: integer
      status_desc:
        example: Bad Request
        type: string
    type: object
  models.SwaggerErrorMethodNotAllowed:
    properties:
      data:
        type: object
      errors:
        example: "null"
        type: string
      message:
        example: Method Not Allowed
        type: string
      status_code:
        example: 405
        type: integer
      status_desc:
        example: Method Not Allowed
        type: string
    type: object
  models.SwaggerErrorNotFound:
    properties:
      data:
        type: object
      errors:
        example: <Error-Message-For-System>
        type: string
      message:
        example: <Error-Message-For-Client-User>
        type: string
      status_code:
        example: 404
        type: integer
      status_desc:
        example: Not Found
        type: string
    type: object
  models.SwaggerErrorUnAuthorize:
    properties:
      data:
        type: object
      errors:
        example: <Error-Message-For-System>
        type: string
      message:
        example: <Error-Message-For-Client-User>
        type: string
      status_code:
        example: 401
        type: integer
      status_desc:
        example: Unauthorized
        type: string
    type: object
  models.SwaggerListSuccess:
    properties:
      data:
        $ref: '#/definitions/models.SampleModulePaginationDto'
      errors:
        example: "null"
        type: string
      message:
        example: Success
        type: string
      status_code:
        example: 200
        type: integer
      status_desc:
        example: OK
        type: string
    type: object
  models.SwaggerOtherInternalServerError:
    properties:
      data:
        type: object
      errors:
        example: <Error-Message-For-System>
        type: string
      message:
        example: <Error-Message-For-Client-User>
        type: string
      status_code:
        example: 500
        type: integer
      status_desc:
        example: Internal Server Error
        type: string
    type: object
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Echo Swagger clean-architecture-beego API
  version: "1.0"
paths:
  /api/sample-module:
    get:
      consumes:
      - application/json
      description: List.
      parameters:
      - description: page
        in: query
        name: page
        type: string
      - description: limit
        in: query
        name: limit
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SwaggerListSuccess'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.SwaggerErrorInvalidMethod'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.SwaggerErrorUnAuthorize'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.SwaggerErrorNotFound'
        "405":
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/models.SwaggerErrorMethodNotAllowed'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/models.SwaggerErrorConflict'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.SwaggerOtherInternalServerError'
      summary: List.
      tags:
      - sampleModule
  /permission/list:
    get:
      consumes:
      - application/json
      description: List.
      parameters:
      - description: page
        in: query
        name: page
        type: string
      - description: limit
        in: query
        name: limit
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.SwaggerErrorInvalidMethod'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.SwaggerErrorUnAuthorize'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.SwaggerErrorNotFound'
        "405":
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/models.SwaggerErrorMethodNotAllowed'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/models.SwaggerErrorConflict'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.SwaggerOtherInternalServerError'
      summary: List.
      tags:
      - permission
schemes:
- http
swagger: "2.0"
